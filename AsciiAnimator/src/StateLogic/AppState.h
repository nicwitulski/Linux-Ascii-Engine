//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file AppState.h
/// @author Nicholas Witulski (nicwitulski@gmail.com)
/// @brief Main state of the animator
/// @version 0.1
/// @date 2025-06-27
///
/// @copyright Copyright (c) 2025
///
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef APPSTATE_H
#define APPSTATE_H

#include "../../../GameEngine/include/GameEngine.h"
#include "../AppParameters/AppParameters.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @class AppState
///
/// Main state of the animator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
class AppState : public GameState
{
private:
   MEVENT   event;
   bool     cameraDrag        = false;
   bool     drawing           = true;
   Position lastMousePosition = Position(-1, -1);

   std::shared_ptr<Entity> userEntity;
   Animation               drawingAnimation;
   Frame                   currentFrame;
   char                    drawingCharacter;
   bool                    selectNewCharacter;

   std::shared_ptr<Slider> testSlider;

   std::shared_ptr<Button> backgroundColorButton;
   std::shared_ptr<Button> textColorButton;
   std::shared_ptr<Button> currentCharacterButton;
   std::shared_ptr<Button> eraserSelectButton;
   std::shared_ptr<Button> frameLengthButton;
   std::shared_ptr<Button> nextFrameButton;
   std::shared_ptr<Button> playAnimationButton;
   std::shared_ptr<Button> previousFrameButton;
   std::shared_ptr<Button> quitButton;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn currentCharacterButtonFunc
   ///
   /// Function that gets executed when the currentCharacterButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void currentCharacterButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn eraserSelectButtonFunc
   ///
   /// Function that gets executed when the eraserSelectButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void eraserSelectButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn frameLengthButtonFunc
   ///
   /// Function that gets executed when the frameLengthButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void frameLengthButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn nextFrameButtonFunc
   ///
   /// Function that gets executed when the nextFrameButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void nextFrameButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn playAnimationButtonFunc
   ///
   /// Function that gets executed when the playAnimationButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void playAnimationButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn previousFrameButtonFunc
   ///
   /// Function that gets executed when the previousFrameButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void previousFrameButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn quitButtonFunc
   ///
   /// Function that gets executed when the quitButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void quitButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn backgroundColorButtonFunc
   ///
   /// Function that gets executed when the backgroundColorButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void backgroundColorButtonFunc();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn textColorButtonFunc
   ///
   /// Function that gets executed when the textColorButton gets pressed
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void textColorButtonFunc();

   States nextState = States::None;

public:
   void onEnter() override;
   void update() override;
   void onExit() override;

   GameState* getNextState() override;
};

#endif