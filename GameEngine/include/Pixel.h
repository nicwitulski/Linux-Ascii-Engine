//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file Pixel.h
/// @author Nicholas Witulski (nicwitulski@gmail.com)
/// @brief Stores all information needed to print a character to an ncurses window
/// @version 0.1
/// @date 2025-06-27
///
/// @copyright Copyright (c) 2025
///
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef PIXEL_H
#define PIXEL_H

#include "Position.h"
#include "RGB.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @class Pixel
///
/// Stores position, a character, ncurses color information, and ncurses attribute information
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Pixel
{
private:
   Position m_position;
   char     m_character;
   RGB      m_textColor;
   RGB      m_backgroundColor;

public:
   Pixel();
   Pixel(const Position position, const char character);
   Pixel(const Position position, const char character, const RGB textColor, const RGB backgroundColor);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setPosition
   ///
   /// @param position - Position of pixel
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setPosition(const Position position);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getPosition
   ///
   /// @return Position of pixel
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const Position& getPosition() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setCharacter
   ///
   /// @param character - char of pixel
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setCharacter(const char character);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getCharacter
   ///
   /// @return char of pixel
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const char& getCharacter() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn displace
   ///
   /// @param dx - x movement difference
   /// @param dy - y movement difference
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void displace(const int dx, const int dy);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setTextColor
   ///
   /// @param textColor - RGB value of the pixel's character
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setTextColor(const RGB textColor);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setBackgroundColor
   ///
   /// @param backgroundColor - RGB value of the pixel's background behind the character
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setBackgroundColor(const RGB backgroundColor);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getTextColor
   ///
   /// @return RGB value of pixel's character
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const RGB& getTextColor() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getBackgroundColor
   ///
   /// @return RGB value of pixel's background
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const RGB& getBackgroundColor() const;
};

#endif
