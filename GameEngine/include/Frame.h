//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file Frame.h
/// @author Nicholas Witulski (nicwitulski@gmail.com)
/// @brief Holds a sprite and a duration (in seconds). Used in an Animation
/// @version 0.1
/// @date 2025-06-27
///
/// @copyright Copyright (c) 2025
///
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef FRAME_H
#define FRAME_H

#include "Sprite.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @class Frame
///
/// Holds a sprite and a duration (in seconds). Used in an Animation
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Frame
{
private:
   Sprite m_sprite;
   float  m_durationInSeconds;

public:
   Frame();
   Frame(const Sprite sprite, const float duration);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getDuration
   ///
   /// @return float of frame duration in seconds
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const float& getDuration() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getSprite
   ///
   /// @return sprite associated with this frame
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const Sprite& getSprite() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getMutableSprite
   ///
   /// @return sprite mutable associated with this frame
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   Sprite& getMutableSprite();

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setSprite
   ///
   /// @param sprite - sets the sprite associated with this frame
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setSprite(const Sprite sprite);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn displace
   ///
   /// @param dx - x axis difference to move the frame by
   /// @param dy - y axis difference to move the frame by
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void displace(const int dx, const int dy);
};

#endif