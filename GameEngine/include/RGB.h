//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file RGB.h
/// @author Nicholas Witulski (nicwitulski@gmail.com)
/// @brief Denotes red, green, and blue values that can be used to print character on an ncurses window
/// @version 0.1
/// @date 2025-06-27
///
/// @copyright Copyright (c) 2025
///
//////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef RGB_H
#define RGB_H

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @class RGB
///
/// Red, Green, and Blue values for ncurses color display.
/// ncurses uses the range 0 - 1000 instead of 0 - 255
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
class RGB
{
private:
   int m_r;
   int m_g;
   int m_b;

public:
   RGB();
   RGB(const int r, const int g, const int b);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getR
   ///
   /// @return Integer red value
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const int& getR() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getG
   ///
   /// @return Integer green value
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const int& getG() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn getB
   ///
   /// @return Integer blue value
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   const int& getB() const;

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setR
   ///
   /// @param r - Integer red value
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setR(const int r);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setG
   ///
   /// @param g - Integer green value
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setG(const int g);

   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   /// @fn setB
   ///
   /// @param b - Integer blue value
   ///////////////////////////////////////////////////////////////////////////////////////////////////////////
   void setB(const int b);
};

#endif